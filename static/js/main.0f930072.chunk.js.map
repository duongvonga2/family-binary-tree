{"version":3,"sources":["lib/components/BinaryTreeNode.js","lib/components/BinaryTree.js","lib/index.js","examples/App.js","index.js"],"names":["fakeUser","id","username","left_child_id","right_child_id","image","BinaryTreeNode","this","props","user","allUsers","deep","maxDeep","renderDetail","renderNode","onClick","colorText","leftChild","find","item","rightChild","href","className","src","style","color","React","Component","BinaryTree","state","selectedUser","rootUser","selectedUserLevel","disableNavigation","disableSideBar","bgSideBar","colorSideBar","bgButton","colorButton","height","display","backgroundColor","class","userId","console","log","level","currentUser","setState","type","disabled","data","App","maxWidth","width","margin","padding","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f930072.chunk.js","sourcesContent":["import React from \"react\";\n\nconst fakeUser = {\n  id: \"null\",\n  username: \"Null\",\n  left_child_id: null,\n  right_child_id: null,\n  image: \"https://i.imgur.com/AFj9jns.png\"\n};\nexport default class BinaryTreeNode extends React.Component {\n  render() {\n    const {\n      user,\n      allUsers,\n      deep,\n      maxDeep = 4,\n      renderDetail,\n      renderNode,\n      onClick,\n      colorText = '#333'\n    } = this.props;\n    let leftChild = allUsers.find(item => item.id === user.left_child_id);\n    if (!leftChild) {\n      leftChild = fakeUser;\n    }\n    let rightChild = allUsers.find(item => item.id === user.right_child_id);\n    if (!rightChild) {\n      rightChild = fakeUser;\n    }\n    return (\n      <li>\n        {(colorText && (\n          <a onClick={()=>{\n            onClick && onClick(user.id);\n          }} href=\"javascript:void(0)\">\n            {renderNode ? (\n              renderNode(user)\n            ) : (\n              <div className=\"distributor-wrap\">\n                <div className=\"avatar\">\n                  <img src={user.image} />\n                </div>\n                <span className=\"name\" style={{color: colorText}}>{user.username}</span>\n              </div>\n            )}\n            <div className=\"distributor-details\">\n              {renderDetail ? (\n                renderDetail(user)\n              ) : (\n                <div className=\"details-wrap\">\n                  <div className=\"details-title\">Details In RenderDetail</div>\n                  <div className=\"details-row\">\n                    <div className=\"label\">NAME</div>\n                    <div className=\"value\">{user.username}</div>\n                  </div>\n                </div>\n              )}\n              <div className=\"horizontal-line\" /> <div className=\"sloping-line\" />\n            </div>\n          </a>\n        ))}\n\n        {deep < maxDeep && (\n          <ul>\n            <BinaryTreeNode\n              deep={deep + 1}\n              maxDeep={maxDeep}\n              allUsers={allUsers}\n              user={leftChild}\n              renderDetail={renderDetail}\n              renderNode={renderNode}\n              onClick={onClick}\n              colorText={colorText}\n            />\n            <BinaryTreeNode\n              deep={deep + 1}\n              maxDeep={maxDeep}\n              allUsers={allUsers}\n              renderDetail={renderDetail}\n              renderNode={renderNode}\n              user={rightChild}\n              onClick={onClick}\n              colorText={colorText}\n            />\n          </ul>\n        )}\n      </li>\n    );\n  }\n}\n","import React from \"react\";\nimport BinaryTreeNode from \"./BinaryTreeNode\";\nimport { FaChevronUp, FaAngleDoubleUp, FaArrowDown } from \"react-icons/fa\";\nimport \"./BinaryTree.scss\";\n\nexport default class BinaryTree extends React.Component {\n  // goToTop() {\n  //   this.setState({\n  //     selectedUser: this.props.rootUser,\n  //     selectedUserLevel: 0,\n  //   });\n  // };\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedUser: props.rootUser,\n      selectedUserLevel: 0\n    };\n  }\n  render() {\n    const {\n      allUsers = [],\n      maxDeep,\n      renderDetail,\n      renderNode,\n      disableNavigation = false,\n      disableSideBar = false,\n      bgSideBar = '#00b6eb',\n      colorSideBar = '#ffffff',\n      colorText,\n      bgButton = '#808285',\n      colorButton = '#ffffff'\n    } = this.props;\n    let rootUser = this.state.selectedUser;\n    let selectedUserLevel = this.state.selectedUserLevel;\n    const goToTop = () => {\n      this.setState({\n        selectedUser: this.props.rootUser,\n        selectedUserLevel: 0\n      });\n    };\n    const goToBottomLeft = () => {\n      let user = rootUser;\n      let level = selectedUserLevel;\n      while (user && user.left_child_id) {\n        user = allUsers.find(item => item.id === user.left_child_id);\n        level++;\n      }\n      if (user) {\n        this.setState({ selectedUser: user, selectedUserLevel: level });\n      }\n    };\n    const goToBottomRight = () => {\n      let user = rootUser;\n      let level = selectedUserLevel;\n      while (user && user.right_child_id) {\n        user = allUsers.find(item => item.id === user.right_child_id);\n        level++;\n      }\n      if (user) {\n        this.setState({ selectedUser: user, selectedUserLevel: level });\n      }\n    };\n    const upOneLevel = () => {\n      const user = [...this.props.allUsers, this.props.rootUser].find(\n        item =>\n          item.left_child_id === this.state.selectedUser.id ||\n          item.right_child_id === this.state.selectedUser.id\n      );\n      console.log(\"up one level\", user);\n      if (user) {\n        this.setState({\n          selectedUser: user,\n          selectedUserLevel: selectedUserLevel - 1\n        });\n      }\n    };\n    const onClickUser = (userId) => {\n      const user = allUsers.find(item => item.id === userId);\n      console.log('Click user', user);\n      if(user){\n        let level = 0;\n        let currentUser = user;\n        while(currentUser){\n          currentUser=this.props.allUsers.find(\n            (user) =>\n              user.left_child_id === currentUser.id ||\n              user.right_child_id === currentUser.id,\n          );\n          level++;\n        }\n        this.setState({\n          selectedUser: user,\n          selectedUserLevel: level,\n        });\n      }\n    }\n    return (\n      <div id=\"binary-tree\" className=\"Treant\" style={{ height: \"800px\" }}>\n        {\n          (selectedUserLevel,\n          disableSideBar, bgSideBar, colorSideBar && (\n            <div className=\"leftSidebar\" style={{display: disableSideBar ? 'none' : 'block' }}>\n              <div className=\"levels-wrap\">\n                <div className=\"level level-0\" style={{backgroundColor: bgSideBar}}>\n                  <span className=\"level-label\" style={{color: colorSideBar}}>Level {selectedUserLevel}</span>\n                </div>\n                <div className=\"level level-1\" style={{backgroundColor: bgSideBar}}>\n                  <span className=\"level-label\" style={{color: colorSideBar}}>\n                    Level {selectedUserLevel + 1}\n                  </span>\n                </div>\n                <div className=\"level level-2\" style={{backgroundColor: bgSideBar}}>\n                  <span className=\"level-label\" style={{color: colorSideBar}}>\n                    Level {selectedUserLevel + 2}\n                  </span>\n                </div>\n                <div className=\"level level-3\" style={{backgroundColor: bgSideBar}}>\n                  <span className=\"level-label\" style={{color: colorSideBar}}>\n                    Level {selectedUserLevel + 3}\n                  </span>\n                </div>\n              </div>\n            </div>\n          ))\n        }\n        <div class=\"tree\">\n          <ul>\n            <BinaryTreeNode\n              allUsers={allUsers}\n              user={rootUser}\n              deep={1}\n              maxDeep={maxDeep}\n              renderDetail={renderDetail}\n              renderNode={renderNode}\n              onClick={onClickUser}\n              colorText={colorText}\n            />\n          </ul>\n          {disableNavigation, bgButton, colorButton && (\n            <div className=\"navigation-buttons\" style={{display: disableNavigation ? 'none' : 'flex' }}>\n              <div>\n                <button\n                  type=\"button\"\n                  className=\"button-tree\"\n                  onClick={goToTop}\n                  disabled={this.state.selectedUser === this.props.rootUser}\n                  style={{backgroundColor: bgButton, color: colorButton}}\n                >\n                  <i>\n                    <FaChevronUp />\n                  </i>\n                  <span>Go to top</span>\n                </button>\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  className=\"button-tree\"\n                  onClick={upOneLevel}\n                  disabled={this.state.selectedUser === this.props.rootUser}\n                  style={{backgroundColor: bgButton, color: colorButton}}\n                >\n                  <i>\n                    <FaAngleDoubleUp />\n                  </i>\n                  <span>Up one level</span>\n                </button>\n              </div>\n              <div className=\"buttons-bottom\">\n                <button\n                  className=\"button-left button-tree\"\n                  type=\"button\"\n                  onClick={goToBottomLeft}\n                  disabled={!this.state.selectedUser.left_child_id}\n                  style={{backgroundColor: bgButton, color: colorButton}}\n                >\n                  <i>\n                    <FaArrowDown />\n                  </i>\n                  <span>Bottom left</span>\n                </button>\n                <button\n                  className=\"button-right button-tree\"\n                  type=\"primary\"\n                  onClick={goToBottomRight}\n                  disabled={!this.state.selectedUser.right_child_id}\n                  style={{backgroundColor: bgButton, color: colorButton}}\n                >\n                  <i>\n                    <FaArrowDown />\n                  </i>\n                  <span>Bottom right</span>\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import BinaryTree from \"./components/BinaryTree\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default BinaryTree;","import React from \"react\";\nimport BinaryTree from \"../lib\";\nimport \"./App.scss\";\n\nconst data = [\n  {\n    id: 1,\n    left_child_id: 2,\n    right_child_id: 3,\n    username: \"User 1\",\n    image: \"https://i.imgur.com/yzUDPMJ.png\"\n  },\n  {\n    id: 2,\n    left_child_id: 4,\n    right_child_id: 5,\n    username: \"User 2\",\n    image: \"https://i.imgur.com/yzUDPMJ.png\"\n  },\n  {\n    id: 3,\n    left_child_id: 6,\n    right_child_id: null,\n    username: \"User 3\",\n    image: \"https://i.imgur.com/yzUDPMJ.png\"\n  },\n  {\n    id: 4,\n    left_child_id: 7,\n    right_child_id: 8,\n    username: \"User 4\",\n    image: \"https://i.imgur.com/yzUDPMJ.png\"\n  },\n  {\n    id: 5,\n    left_child_id: null,\n    right_child_id: null,\n    username: \"User 5\",\n    image: \"https://i.imgur.com/yzUDPMJ.png\"\n  },\n  {\n    id: 6,\n    left_child_id: null,\n    right_child_id: null,\n    username: \"User 6\",\n    image: \"https://i.imgur.com/yzUDPMJ.png\"\n  },\n  {\n    id: 7,\n    left_child_id: 9,\n    right_child_id: null,\n    username: \"User 7\",\n    image: \"https://i.imgur.com/yzUDPMJ.png\"\n  },\n  {\n    id: 8,\n    left_child_id: null,\n    right_child_id: 10,\n    username: \"User 8\",\n    image: \"https://i.imgur.com/yzUDPMJ.png\"\n  },\n  {\n    id: 9,\n    left_child_id: null,\n    right_child_id: null,\n    username: \"User 9\",\n    image: \"https://i.imgur.com/yzUDPMJ.png\"\n  },\n  {\n    id: 10,\n    left_child_id: null,\n    right_child_id: null,\n    username: \"User 10\",\n    image: \"https://i.imgur.com/yzUDPMJ.png\"\n  },\n];\nconst App = () => (\n  <div\n    style={{\n      maxWidth: \"1140px\",\n      width: \"100%\",\n      margin: \"0 auto\",\n      padding: \"0 auto\"\n    }}\n  >\n    <h1>Hello Tung Codosa</h1>\n    <BinaryTree\n      allUsers={data}\n      rootUser={data[0]}\n      bgSideBar={'#333'}\n      colorText={'#333'}\n      colorSideBar={'#fff'}\n      // bgButton={'blue'}\n      // colorButton={'black'}\n      // disableSideBar\n      // disableNavigation\n      // renderNode={user=>{\n      //   return (<div>Node</div>);\n      // }}\n      // renderDetail={user => {\n      //   return <div>User</div>;\n      // }}\n    />\n  </div>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./examples/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}